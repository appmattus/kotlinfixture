name: CI

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    branches:
    - main

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:

  dependency-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Dependency Check
      env:
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
      run: ./gradlew dependencyCheckAnalyze --stacktrace

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Run tests
      run: ./gradlew test

  publish:
    runs-on: ubuntu-latest
    needs: [test, dependency-check]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Publish package to local staging directory
      run: ./gradlew clean publish

    - name: Publish package to maven central
      env:
        JRELEASER_MAVENCENTRAL_SONATYPE_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_SONATYPE_USERNAME }}
        JRELEASER_MAVENCENTRAL_SONATYPE_TOKEN: ${{ secrets.JRELEASER_MAVENCENTRAL_SONATYPE_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./gradlew jreleaserFullRelease
      if: startsWith(github.ref, 'refs/tags/')
